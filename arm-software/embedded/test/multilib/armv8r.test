# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -marm | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -mthumb | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -march=armv8-r+ras | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -mcpu=cortex-r52 | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -munaligned-access | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -marm -munaligned-access | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -mthumb -munaligned-access | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -march=armv8-r+ras -munaligned-access | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -mfpu=none -mcpu=cortex-r52 -munaligned-access | FileCheck --check-prefix=SOFT-NOFP-UNALIGNED %s
#SOFT-NOFP-UNALIGNED: arm-none-eabi/armv7r_soft_nofp_exn_rtti_unaligned{{$}}
#SOFT-NOFP-UNALIGNED-EMPTY:

# RUN: %clang -print-multi-directory --target=armv8r-none-eabi | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfloat-abi=softfp | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -mfloat-abi=softfp -march=armv8-r | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -marm | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -mthumb | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -mfpu=fpv5-d16 | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabi -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfloat-abi=softfp -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -mfloat-abi=softfp -march=armv8-r -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -marm -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -mthumb -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabi -march=armv8-r -mfpu=fpv5-d16 -munaligned-access | FileCheck --check-prefix=SOFT-VFPV3-UNALIGNED %s
# SOFT-VFPV3-UNALIGNED: arm-none-eabi/armv7r_soft_vfpv3xd_exn_rtti_unaligned{{$}}
# SOFT-VFPV3-UNALIGNED-EMPTY:

# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-vfpv3 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16-fp16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-fp16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv4-d16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv4 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-fp16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-vfpv4 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 -marm | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 -mthumb | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mcpu=cortex-r52 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv5-d16 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fp-armv8 | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-vfpv3 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16-fp16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-fp16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv4-d16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv4 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-fp16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=neon-vfpv4 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 -marm -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mfpu=vfpv3-d16 -mthumb -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -mcpu=cortex-r52 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv5-d16 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fp-armv8 -munaligned-access | FileCheck --check-prefix=VFPV3-UNALIGNED %s
# VFPV3-UNALIGNED: arm-none-eabi/armv7r_hard_vfpv3_d16_exn_rtti_unaligned{{$}}
# VFPV3-UNALIGNED-EMPTY:

# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -marm | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mthumb | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv4-sp-d16 | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv5-sp-d16 | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=armv8r-none-eabihf -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -marm -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mthumb -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv4-sp-d16 -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# RUN: %clang -print-multi-directory --target=arm-none-eabihf -march=armv8-r -mfpu=fpv5-sp-d16 -munaligned-access | FileCheck --check-prefix=VFPV3XD-UNALIGNED %s
# VFPV3XD-UNALIGNED: arm-none-eabi/armv7r_hard_vfpv3xd_exn_rtti_unaligned{{$}}
# VFPV3XD-UNALIGNED-EMPTY:
