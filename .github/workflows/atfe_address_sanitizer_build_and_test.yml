# Copyright (c) 2025, Arm Limited and affiliates.
# Part of the Arm Toolchain project, under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# This workflow runs build script for address sanitizer for
# Linux x86-64 architecture.
# It is intended to be triggered as part of a **once a week build** to
# validate build configurations and test them automatically.
#
# Build script is paired with a test script.

name: ATfE Address Sanitizer Build and Test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 0'  # Every Sunday at 6:00pm UTC

jobs:
  atfe-address-sanitizer-build-and-test-toolchain:
    name: Build ${{ matrix.build_script }} for ${{ matrix.target_os }} on ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    # Ensure the workflow only runs on the arm-toolchain repository and not on forks
    if: github.repository == 'arm/arm-toolchain'

    strategy:
      fail-fast: false  # Prevents one job failure from cancelling all
      matrix:
        include:
          # Complete Toolchain Build & Test
          - build_script: build_atfe_address_sanitizer.sh
            test_script: test_atfe_sanitizer.sh
            install_script: install_dependencies.sh
            target_os: Ubuntu-22.04-x86_64
            runner: ubuntu-22.04  

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: ./arm-software/embedded/scripts/${{ matrix.install_script }}

      - name: Add ~/.local/bin to PATH
        if: runner.os != 'Windows'
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Apply llvm-project patches
        run: python3 arm-software/embedded/cmake/patch_repo.py --method apply arm-software/embedded/patches/llvm-project

      - name: Apply llvm-project-perf patches
        run: python3 arm-software/embedded/cmake/patch_repo.py --method apply arm-software/embedded/patches/llvm-project-perf

      - name: Build ${{ matrix.build_script }}
        run: ./arm-software/embedded/scripts/${{ matrix.build_script }}

      - name: Test ${{ matrix.test_script }}
        if: matrix.test_script != ''
        run: ./arm-software/embedded/scripts/${{ matrix.test_script }}

